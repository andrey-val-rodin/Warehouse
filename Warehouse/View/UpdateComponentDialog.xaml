<Window x:Class="Warehouse.View.UpdateComponentDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Warehouse.View"
        mc:Ignorable="d"
        Title="Обновить позицию"
        Height="350"
        Width="400"
        ResizeMode="NoResize"
        ShowInTaskbar="False"
        WindowStartupLocation="CenterOwner"
        ContentRendered="Window_ContentRendered">
    <Grid>
        <Grid.Resources>
            <Style TargetType="{x:Type Grid}">
                <Setter Property="Margin" Value="10,16,10,10" />
            </Style>
            <Style TargetType="{x:Type Label}">
                <Setter Property="Margin" Value="0,3,5,5" />
                <Setter Property="Padding" Value="0,0,0,5" />
            </Style>
            <Style TargetType="{x:Type TextBox}">
                <Setter Property="Margin" Value="0,0,0,5" />
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="ToolTip" 
                                Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)/ErrorContent}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type DatePicker}">
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="ToolTip" 
                                Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)/ErrorContent}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type StackPanel}">
                <Setter Property="Margin" Value="0,10,0,0" />
                <Setter Property="Orientation" Value="Horizontal" />
                <Setter Property="HorizontalAlignment" Value="Right" />
            </Style>
            <Style TargetType="{x:Type Button}">
                <Setter Property="Width" Value="70" />
                <Setter Property="Height" Value="25" />
                <Setter Property="Margin" Value="5,0,0,0" />
            </Style>
            <ImageBrush x:Key="okImage" ImageSource="images\ok.png"/>
            <ImageBrush x:Key="cancelImage" ImageSource="images\cancel.png"/>
        </Grid.Resources>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="140" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!-- Amount -->
        <Label Grid.Column="0" Grid.Row="0">Наличие:</Label>
        <TextBox Name="newAmount" Grid.Column="1" Grid.Row="0"
                 VerticalContentAlignment="Center">
            <TextBox.Text>
                <Binding Path="Amount" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <local:AmountValidationRule />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>

        <!-- Price -->
        <Label Grid.Column="0" Grid.Row="1">Цена:</Label>
        <TextBox Name="price" Grid.Column="1" Grid.Row="1"
                 Margin="0,-4,0,0"
                 Height="24"
                 VerticalContentAlignment="Center">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="Text" Value="{Binding Path=Price, StringFormat=\{0:0.00\}}"/>
                    <Style.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Text" Value="{Binding Path=Price, UpdateSourceTrigger=PropertyChanged}"/>
                            <Setter Property="ToolTip"
                                    Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)/ErrorContent}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
            <TextBox.Text>
                <Binding Path="Price" UpdateSourceTrigger="PropertyChanged">
                    <Binding.Converter>
                        <local:NullableValueConverter/>
                    </Binding.Converter>
                    <Binding.ValidationRules>
                        <local:PriceValidationRule />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>

        <!-- Ordered -->
        <Label Grid.Column="0" Grid.Row="2">Заказано:</Label>
        <ToolBarPanel Grid.Column="1" Grid.Row="2"
                      Orientation="Horizontal">
            <TextBox VerticalContentAlignment="Center"
                     Width="170">
                <TextBox.Text>
                    <Binding Path="Ordered" UpdateSourceTrigger="PropertyChanged">
                        <Binding.Converter>
                            <local:NullableValueConverter/>
                        </Binding.Converter>
                        <Binding.ValidationRules>
                            <local:OrderedValidationRule />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Button ToolTip="Подтвердить получение"
                    Width="24"
                    Height="24"
                    Margin="4, 0, 0, 0"
                    VerticalAlignment="Top"
                    IsEnabled="{Binding Path=Ordered, TargetNullValue='False'}"
                    Click="ConfirmReceiving_Click">
                <Image Source="images\ok.png"
                       Width="16"
                       Height="16"/>
            </Button>
            <Button ToolTip="Отменить заказ"
                    Width="24"
                    Height="24"
                    Margin="2, 0, 0, 0"
                    VerticalAlignment="Top"
                    IsEnabled="{Binding Path=Ordered, TargetNullValue='False'}"
                    Click="CancelOrder_Click">
                <Image Source="images\cancel.png"
                       Width="16"
                       Height="16"/>
            </Button>
        </ToolBarPanel>

        <!-- Expected date -->
        <DatePicker Name="datePicker" Grid.Column="1" Grid.Row="3"
                    IsEnabled="{Binding Path=Ordered, TargetNullValue='False'}">
            <DatePicker.SelectedDate>
                <Binding Path="ExpectedDate" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <local:ComponentDateValidationRule />
                    </Binding.ValidationRules>
                </Binding>
            </DatePicker.SelectedDate>
        </DatePicker>
        
        <!-- Details -->
        <Label Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="4"
               Margin="0,10,0,0">Заметки</Label>
        <TextBox Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="5"
                 Height="100"
                 MaxLength="10000"
                 Margin="0,-2,0,0"
                 TextWrapping="Wrap"
                 AcceptsReturn="True">
            <TextBox.Text>
                <Binding Path="Details" UpdateSourceTrigger="PropertyChanged"/>
            </TextBox.Text>
        </TextBox>
        
        <!-- Accept or Cancel -->
        <StackPanel Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="6"
                    Margin="0, 12">
            <Button Name="okButton" Click="okButton_Click" IsDefault="True">OK</Button>
            <Button Name="cancelButton" Click="cancelButton_Click" IsCancel="True">Cancel</Button>
        </StackPanel>
    </Grid >
</Window>
